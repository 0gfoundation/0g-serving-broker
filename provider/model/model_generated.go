// Code generated by gen; DO NOT EDIT.

package model

import (
	"github.com/gin-gonic/gin"
)

// ================================= Request =================================
func (d *Request) Bind(ctx *gin.Context) error {
	var r Request
	if err := ctx.ShouldBindJSON(&r); err != nil {
		return err
	}
	d.UserAddress = r.UserAddress
	d.Nonce = r.Nonce
	d.ServiceName = r.ServiceName
	d.InputCount = r.InputCount
	d.PreviousOutputCount = r.PreviousOutputCount
	d.Fee = r.Fee
	d.Signature = r.Signature
	d.Processed = r.Processed

	return nil
}

func (d *Request) BindWithReadonly(ctx *gin.Context, old Request) error {
	if err := d.Bind(ctx); err != nil {
		return err
	}

	return nil
}

// ================================= Service =================================
func (d *Service) Bind(ctx *gin.Context) error {
	var r Service
	if err := ctx.ShouldBindJSON(&r); err != nil {
		return err
	}
	d.Name = r.Name
	d.Type = r.Type
	d.URL = r.URL
	d.InputPrice = r.InputPrice
	d.OutputPrice = r.OutputPrice

	return nil
}

func (d *Service) BindWithReadonly(ctx *gin.Context, old Service) error {
	if err := d.Bind(ctx); err != nil {
		return err
	}

	return nil
}

// ================================= User =================================
func (d *User) Bind(ctx *gin.Context) error {
	var r User
	if err := ctx.ShouldBindJSON(&r); err != nil {
		return err
	}
	d.User = r.User
	d.LastRequestNonce = r.LastRequestNonce
	d.LockBalance = r.LockBalance
	d.LastBalanceCheckTime = r.LastBalanceCheckTime
	d.LastResponseTokenCount = r.LastResponseTokenCount
	d.UnsettledFee = r.UnsettledFee

	return nil
}

func (d *User) BindWithReadonly(ctx *gin.Context, old User) error {
	if err := d.Bind(ctx); err != nil {
		return err
	}

	return nil
}

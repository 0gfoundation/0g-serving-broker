basePath: /v1
definitions:
  model.ListMeta:
    properties:
      total:
        type: integer
    type: object
  model.Request:
    properties:
      createdAt:
        readOnly: true
        type: string
      fee:
        type: integer
      inputFee:
        type: integer
      nonce:
        type: integer
      previousOutputFee:
        type: integer
      processed:
        type: boolean
      serviceName:
        type: string
      signature:
        type: string
      updatedAt:
        readOnly: true
        type: string
      userAddress:
        type: string
    required:
    - fee
    - inputFee
    - nonce
    - previousOutputFee
    - serviceName
    - signature
    - userAddress
    type: object
  model.RequestList:
    properties:
      fee:
        type: integer
      items:
        items:
          $ref: '#/definitions/model.Request'
        type: array
      metadata:
        $ref: '#/definitions/model.ListMeta'
    type: object
  model.Service:
    properties:
      createdAt:
        readOnly: true
        type: string
      inputPrice:
        type: integer
      model:
        type: string
      name:
        type: string
      outputPrice:
        type: integer
      type:
        type: string
      updatedAt:
        readOnly: true
        type: string
      url:
        type: string
    required:
    - inputPrice
    - model
    - name
    - outputPrice
    - type
    - url
    type: object
  model.ServiceList:
    properties:
      items:
        items:
          $ref: '#/definitions/model.Service'
        type: array
      metadata:
        $ref: '#/definitions/model.ListMeta'
    type: object
  model.User:
    properties:
      createdAt:
        readOnly: true
        type: string
      lastBalanceCheckTime:
        type: string
      lastRequestNonce:
        type: integer
      lastResponseFee:
        type: integer
      lockBalance:
        type: integer
      signer:
        items:
          type: string
        type: array
      unsettledFee:
        type: integer
      updatedAt:
        readOnly: true
        type: string
      user:
        type: string
    required:
    - user
    type: object
  model.UserList:
    properties:
      items:
        items:
          $ref: '#/definitions/model.User'
        type: array
      metadata:
        $ref: '#/definitions/model.ListMeta'
    type: object
info:
  contact: {}
  title: 0G Serving Provider Broker API
  version: "1.0"
paths:
  /request:
    get:
      operationId: listRequest
      parameters:
      - description: Processed
        in: query
        name: processed
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RequestList'
      tags:
      - request
  /service:
    get:
      operationId: listService
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ServiceList'
      tags:
      - service
    post:
      operationId: registerService
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Service'
      responses:
        "204":
          description: No Content - success without response body
      tags:
      - service
  /service/{service}:
    delete:
      operationId: deleteService
      parameters:
      - description: Service name
        in: path
        name: service
        required: true
        type: string
      responses:
        "202":
          description: Accepted
      tags:
      - service
    get:
      operationId: getService
      parameters:
      - description: Service name
        in: path
        name: service
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Service'
      tags:
      - service
    put:
      operationId: updateService
      parameters:
      - description: Service name
        in: path
        name: service
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Service'
      responses:
        "202":
          description: Accepted
      tags:
      - service
  /settle:
    post:
      description: This endpoint allows you to settle fees for requests from users
      operationId: settleFees
      responses:
        "202":
          description: Accepted
      tags:
      - settle
  /sync-account:
    post:
      description: This endpoint allows you to synchronize information of all accounts
        from the contract
      operationId: syncUserAccounts
      responses:
        "202":
          description: Accepted
      tags:
      - user
  /sync-service:
    post:
      description: This endpoint allows you to synchronize all services from local
        database to the contract
      operationId: syncServices
      responses:
        "202":
          description: Accepted
      tags:
      - service
  /user:
    get:
      operationId: listUserAccount
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserList'
      tags:
      - user
  /user/{user}:
    get:
      operationId: getUserAccount
      parameters:
      - description: User address
        in: path
        name: user
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      tags:
      - user
  /user/{user}/sync:
    post:
      description: This endpoint allows you to synchronize information of single account
        from the contract
      operationId: syncUserAccount
      parameters:
      - description: User address
        in: path
        name: user
        required: true
        type: string
      responses:
        "202":
          description: Accepted
      tags:
      - user
swagger: "2.0"

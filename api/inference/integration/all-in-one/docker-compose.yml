services:
  hardhat-node-with-contract:
    image: raven20241/hardhat-compute-network-contract:dev
    ports:
      - "8545:8545"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh"]
      interval: 10s
      retries: 5
    networks:
      - default
  mysql:
    image: mysql:8.0
    ports:
      - "33060:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -p123456 -e 'USE provider'"]
      interval: 15s
      timeout: 5s
      retries: 15
      start_period: 60s
    networks:
      - default

  # Nginx load balancer
  nginx:
    image: nginx:1.27.0
    ports:
      - "3080:80"
      - "30443:443"
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/stub_status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Main broker starts after nginx is ready
  0g-serving-provider-broker:
    image: ghcr.io/0glabs/0g-serving-broker:dev-amd64
    environment:
      - PORT=3080
      - CONFIG_FILE=/etc/config.yaml
      - NETWORK=hardhat
    volumes:
      - ./config.local.yml:/etc/config.yaml
    command: 0g-inference-server
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "test -L /proc/1/exe && readlink /proc/1/exe | grep -q broker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      hardhat-node-with-contract:
        condition: service_healthy
      nginx:
        condition: service_healthy

  # Event service starts after broker is ready
  0g-serving-provider-event:
    image: ghcr.io/0glabs/0g-serving-broker:dev-amd64
    environment:
      - CONFIG_FILE=/etc/config.yaml
      - NETWORK=hardhat
    volumes:
      - ./config.local.yml:/etc/config.yaml
    command: 0g-inference-event
    networks:
      - default
    healthcheck:
      test: ["CMD", "pgrep", "-f", "0g-inference-event"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    depends_on:
      0g-serving-provider-broker:
        condition: service_healthy
      nginx:
        condition: service_healthy
volumes:
  mysql-data:

networks:
  default:
    name: 0g-serving-network
    external: false

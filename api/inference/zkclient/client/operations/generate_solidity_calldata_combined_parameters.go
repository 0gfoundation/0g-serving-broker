// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGenerateSolidityCalldataCombinedParams creates a new GenerateSolidityCalldataCombinedParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGenerateSolidityCalldataCombinedParams() *GenerateSolidityCalldataCombinedParams {
	return &GenerateSolidityCalldataCombinedParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGenerateSolidityCalldataCombinedParamsWithTimeout creates a new GenerateSolidityCalldataCombinedParams object
// with the ability to set a timeout on a request.
func NewGenerateSolidityCalldataCombinedParamsWithTimeout(timeout time.Duration) *GenerateSolidityCalldataCombinedParams {
	return &GenerateSolidityCalldataCombinedParams{
		timeout: timeout,
	}
}

// NewGenerateSolidityCalldataCombinedParamsWithContext creates a new GenerateSolidityCalldataCombinedParams object
// with the ability to set a context for a request.
func NewGenerateSolidityCalldataCombinedParamsWithContext(ctx context.Context) *GenerateSolidityCalldataCombinedParams {
	return &GenerateSolidityCalldataCombinedParams{
		Context: ctx,
	}
}

// NewGenerateSolidityCalldataCombinedParamsWithHTTPClient creates a new GenerateSolidityCalldataCombinedParams object
// with the ability to set a custom HTTPClient for a request.
func NewGenerateSolidityCalldataCombinedParamsWithHTTPClient(client *http.Client) *GenerateSolidityCalldataCombinedParams {
	return &GenerateSolidityCalldataCombinedParams{
		HTTPClient: client,
	}
}

/*
GenerateSolidityCalldataCombinedParams contains all the parameters to send to the API endpoint

	for the generate solidity calldata combined operation.

	Typically these are written to a http.Request.
*/
type GenerateSolidityCalldataCombinedParams struct {

	// Backend.
	Backend *string

	// Body.
	Body GenerateSolidityCalldataCombinedBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the generate solidity calldata combined params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GenerateSolidityCalldataCombinedParams) WithDefaults() *GenerateSolidityCalldataCombinedParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the generate solidity calldata combined params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GenerateSolidityCalldataCombinedParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) WithTimeout(timeout time.Duration) *GenerateSolidityCalldataCombinedParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) WithContext(ctx context.Context) *GenerateSolidityCalldataCombinedParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) WithHTTPClient(client *http.Client) *GenerateSolidityCalldataCombinedParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBackend adds the backend to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) WithBackend(backend *string) *GenerateSolidityCalldataCombinedParams {
	o.SetBackend(backend)
	return o
}

// SetBackend adds the backend to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) SetBackend(backend *string) {
	o.Backend = backend
}

// WithBody adds the body to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) WithBody(body GenerateSolidityCalldataCombinedBody) *GenerateSolidityCalldataCombinedParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the generate solidity calldata combined params
func (o *GenerateSolidityCalldataCombinedParams) SetBody(body GenerateSolidityCalldataCombinedBody) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *GenerateSolidityCalldataCombinedParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Backend != nil {

		// query param backend
		var qrBackend string

		if o.Backend != nil {
			qrBackend = *o.Backend
		}
		qBackend := qrBackend
		if qBackend != "" {

			if err := r.SetQueryParam("backend", qBackend); err != nil {
				return err
			}
		}
	}
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

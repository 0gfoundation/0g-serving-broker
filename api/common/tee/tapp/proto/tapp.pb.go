// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: tapp.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AttestationMode int32

const (
	AttestationMode_REPORT_DATA AttestationMode = 0
	AttestationMode_RTMR        AttestationMode = 1
)

// Enum value maps for AttestationMode.
var (
	AttestationMode_name = map[int32]string{
		0: "REPORT_DATA",
		1: "RTMR",
	}
	AttestationMode_value = map[string]int32{
		"REPORT_DATA": 0,
		"RTMR":        1,
	}
)

func (x AttestationMode) Enum() *AttestationMode {
	p := new(AttestationMode)
	*p = x
	return p
}

func (x AttestationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttestationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_tapp_proto_enumTypes[0].Descriptor()
}

func (AttestationMode) Type() protoreflect.EnumType {
	return &file_tapp_proto_enumTypes[0]
}

func (x AttestationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttestationMode.Descriptor instead.
func (AttestationMode) EnumDescriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{0}
}

// Start App Messages
type StartAppRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ComposeContent string                 `protobuf:"bytes,1,opt,name=compose_content,json=composeContent,proto3" json:"compose_content,omitempty"`
	Mode           AttestationMode        `protobuf:"varint,2,opt,name=mode,proto3,enum=tapp_service.AttestationMode" json:"mode,omitempty"`
	RtmrIndex      int32                  `protobuf:"varint,3,opt,name=rtmr_index,json=rtmrIndex,proto3" json:"rtmr_index,omitempty"` // Optional, defaults to 3
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StartAppRequest) Reset() {
	*x = StartAppRequest{}
	mi := &file_tapp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAppRequest) ProtoMessage() {}

func (x *StartAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tapp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAppRequest.ProtoReflect.Descriptor instead.
func (*StartAppRequest) Descriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{0}
}

func (x *StartAppRequest) GetComposeContent() string {
	if x != nil {
		return x.ComposeContent
	}
	return ""
}

func (x *StartAppRequest) GetMode() AttestationMode {
	if x != nil {
		return x.Mode
	}
	return AttestationMode_REPORT_DATA
}

func (x *StartAppRequest) GetRtmrIndex() int32 {
	if x != nil {
		return x.RtmrIndex
	}
	return 0
}

type StartAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	VolumesHash   []byte                 `protobuf:"bytes,3,opt,name=volumes_hash,json=volumesHash,proto3" json:"volumes_hash,omitempty"` // SHA-256 hash of measured volumes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartAppResponse) Reset() {
	*x = StartAppResponse{}
	mi := &file_tapp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAppResponse) ProtoMessage() {}

func (x *StartAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tapp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAppResponse.ProtoReflect.Descriptor instead.
func (*StartAppResponse) Descriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{1}
}

func (x *StartAppResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartAppResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartAppResponse) GetVolumesHash() []byte {
	if x != nil {
		return x.VolumesHash
	}
	return nil
}

// Get Quote Messages
type GetQuoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportData    []byte                 `protobuf:"bytes,1,opt,name=report_data,json=reportData,proto3" json:"report_data,omitempty"` // Optional custom report data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_tapp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tapp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{2}
}

func (x *GetQuoteRequest) GetReportData() []byte {
	if x != nil {
		return x.ReportData
	}
	return nil
}

type GetQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	QuoteData     []byte                 `protobuf:"bytes,3,opt,name=quote_data,json=quoteData,proto3" json:"quote_data,omitempty"` // Raw TDX quote bytes
	QuoteSize     uint32                 `protobuf:"varint,4,opt,name=quote_size,json=quoteSize,proto3" json:"quote_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	mi := &file_tapp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tapp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetQuoteResponse) Descriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetQuoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetQuoteResponse) GetQuoteData() []byte {
	if x != nil {
		return x.QuoteData
	}
	return nil
}

func (x *GetQuoteResponse) GetQuoteSize() uint32 {
	if x != nil {
		return x.QuoteSize
	}
	return 0
}

// Get Public Key Messages
type GetPubkeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPubkeyRequest) Reset() {
	*x = GetPubkeyRequest{}
	mi := &file_tapp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPubkeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubkeyRequest) ProtoMessage() {}

func (x *GetPubkeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tapp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubkeyRequest.ProtoReflect.Descriptor instead.
func (*GetPubkeyRequest) Descriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{4}
}

type GetPubkeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`               // 64-byte uncompressed public key
	EthAddress    []byte                 `protobuf:"bytes,4,opt,name=eth_address,json=ethAddress,proto3" json:"eth_address,omitempty"`            // 20-byte Ethereum address
	EthAddressHex string                 `protobuf:"bytes,5,opt,name=eth_address_hex,json=ethAddressHex,proto3" json:"eth_address_hex,omitempty"` // 0x-prefixed hex string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPubkeyResponse) Reset() {
	*x = GetPubkeyResponse{}
	mi := &file_tapp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPubkeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubkeyResponse) ProtoMessage() {}

func (x *GetPubkeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tapp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubkeyResponse.ProtoReflect.Descriptor instead.
func (*GetPubkeyResponse) Descriptor() ([]byte, []int) {
	return file_tapp_proto_rawDescGZIP(), []int{5}
}

func (x *GetPubkeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetPubkeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPubkeyResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *GetPubkeyResponse) GetEthAddress() []byte {
	if x != nil {
		return x.EthAddress
	}
	return nil
}

func (x *GetPubkeyResponse) GetEthAddressHex() string {
	if x != nil {
		return x.EthAddressHex
	}
	return ""
}

var File_tapp_proto protoreflect.FileDescriptor

const file_tapp_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"tapp.proto\x12\ftapp_service\"\x8c\x01\n" +
	"\x0fStartAppRequest\x12'\n" +
	"\x0fcompose_content\x18\x01 \x01(\tR\x0ecomposeContent\x121\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x1d.tapp_service.AttestationModeR\x04mode\x12\x1d\n" +
	"\n" +
	"rtmr_index\x18\x03 \x01(\x05R\trtmrIndex\"i\n" +
	"\x10StartAppResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\fvolumes_hash\x18\x03 \x01(\fR\vvolumesHash\"2\n" +
	"\x0fGetQuoteRequest\x12\x1f\n" +
	"\vreport_data\x18\x01 \x01(\fR\n" +
	"reportData\"\x84\x01\n" +
	"\x10GetQuoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"quote_data\x18\x03 \x01(\fR\tquoteData\x12\x1d\n" +
	"\n" +
	"quote_size\x18\x04 \x01(\rR\tquoteSize\"\x12\n" +
	"\x10GetPubkeyRequest\"\xaf\x01\n" +
	"\x11GetPubkeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\fR\tpublicKey\x12\x1f\n" +
	"\veth_address\x18\x04 \x01(\fR\n" +
	"ethAddress\x12&\n" +
	"\x0feth_address_hex\x18\x05 \x01(\tR\rethAddressHex*,\n" +
	"\x0fAttestationMode\x12\x0f\n" +
	"\vREPORT_DATA\x10\x00\x12\b\n" +
	"\x04RTMR\x10\x012\xf1\x01\n" +
	"\vTappService\x12I\n" +
	"\bStartApp\x12\x1d.tapp_service.StartAppRequest\x1a\x1e.tapp_service.StartAppResponse\x12I\n" +
	"\bGetQuote\x12\x1d.tapp_service.GetQuoteRequest\x1a\x1e.tapp_service.GetQuoteResponse\x12L\n" +
	"\tGetPubkey\x12\x1e.tapp_service.GetPubkeyRequest\x1a\x1f.tapp_service.GetPubkeyResponseB>Z<github.com/0glabs/0g-serving-broker/common/tee/tapp/proto;pbb\x06proto3"

var (
	file_tapp_proto_rawDescOnce sync.Once
	file_tapp_proto_rawDescData []byte
)

func file_tapp_proto_rawDescGZIP() []byte {
	file_tapp_proto_rawDescOnce.Do(func() {
		file_tapp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tapp_proto_rawDesc), len(file_tapp_proto_rawDesc)))
	})
	return file_tapp_proto_rawDescData
}

var file_tapp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tapp_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tapp_proto_goTypes = []any{
	(AttestationMode)(0),      // 0: tapp_service.AttestationMode
	(*StartAppRequest)(nil),   // 1: tapp_service.StartAppRequest
	(*StartAppResponse)(nil),  // 2: tapp_service.StartAppResponse
	(*GetQuoteRequest)(nil),   // 3: tapp_service.GetQuoteRequest
	(*GetQuoteResponse)(nil),  // 4: tapp_service.GetQuoteResponse
	(*GetPubkeyRequest)(nil),  // 5: tapp_service.GetPubkeyRequest
	(*GetPubkeyResponse)(nil), // 6: tapp_service.GetPubkeyResponse
}
var file_tapp_proto_depIdxs = []int32{
	0, // 0: tapp_service.StartAppRequest.mode:type_name -> tapp_service.AttestationMode
	1, // 1: tapp_service.TappService.StartApp:input_type -> tapp_service.StartAppRequest
	3, // 2: tapp_service.TappService.GetQuote:input_type -> tapp_service.GetQuoteRequest
	5, // 3: tapp_service.TappService.GetPubkey:input_type -> tapp_service.GetPubkeyRequest
	2, // 4: tapp_service.TappService.StartApp:output_type -> tapp_service.StartAppResponse
	4, // 5: tapp_service.TappService.GetQuote:output_type -> tapp_service.GetQuoteResponse
	6, // 6: tapp_service.TappService.GetPubkey:output_type -> tapp_service.GetPubkeyResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tapp_proto_init() }
func file_tapp_proto_init() {
	if File_tapp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tapp_proto_rawDesc), len(file_tapp_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tapp_proto_goTypes,
		DependencyIndexes: file_tapp_proto_depIdxs,
		EnumInfos:         file_tapp_proto_enumTypes,
		MessageInfos:      file_tapp_proto_msgTypes,
	}.Build()
	File_tapp_proto = out.File
	file_tapp_proto_goTypes = nil
	file_tapp_proto_depIdxs = nil
}
